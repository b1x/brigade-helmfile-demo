tasks:
  tools:
    script: |
      helm plugin remove diff
      helm plugin install https://github.com/databus23/helm-diff --version master
      helm plugin install https://github.com/aslafy-z/helm-git.git

  sync:
    script: |
      helm init --client-only
      helm tiller run -- helmfile sync

  apply:
    script: |
      helm init --client-only
      helm tiller run -- helmfile apply --suppress-secrets

  diff:
    script: |
      helm init --client-only
      helm tiller run -- helmfile diff --suppress-secrets --detailed-exitcode

  lint:
    script: |
      helm init --client-only
      helm tiller run -- helmfile lint

  destroy:
    script: |
      helm tiller run -- helmfile destroy

  polaris:
    description: |
      Open polaris dashboard in your browser

      Polaris: https://github.com/reactiveops/polaris
    script: |
      trap 'kill 0' TERM
      kubectl port-forward --namespace polaris svc/polaris-dashboard 8082:80 &
      open http://localhost:8082

  deploy:
    parameters:
    - name: approved
      type: bool
    - name: branch
      type: string
    - name: repo
      type: string
    - name: repodir
      type: string
    - name: dir
      type: string
    - name: pull-id
      type: number
    - name: inst-id
      type: number
    - name: rollout
      type: bool
    script: |
      dir={{.dir}}
      repodir={{.repodir}}
      branch={{.branch}}
      repo={{.repo}}
      if [ ! -d $dir ]; then
        git clone git@github.com:${repo}.git $repodir
        (cd $repodir; git checkout $branch
      fi
      ns=cd.brigade.sh
      helmfile build {{ if .rollout }}--state-values-set rollout=true {{ end }}--annotate \
        $ns/github-pull-id={{ get "pullId" }},$ns/github-app-inst-id={{ get "instId" }},$ns/git-repo=$repo \
        --annotate $ns/git-branch=$branch,$ns/dir=$dir
        {{ if .approved }},$ns/git-commit={{.ref}},approved=true{{ end }} \
        > $repodir/$dir/helmfile.yaml
      cd $repodir/$dir
      git add helmfile.yaml
      git commit -m 'Update'
      git push origin $branch

  ngrok-setup:
    script: |
      open https://dashboard.ngrok.com/get-started

  ngrok-status:
    script: |
      port=4040
      kubectl port-forward svc/tunnel-ngrok $port &
      open http://localhost:$port/status

  brig-dashboard:
    script: |
      brig dashboard

  image:
    script: |
      image_tag=mumoshu/helmfile-chatops:0.2.1
      docker build -t $image_tag .
      docker push $image_tag

  gitips:
    tasks:
      init:
        script: |
          git checkout â€”orphan gitops
          git commit --allow-empty -m "first commit"
          git push origin gitops

